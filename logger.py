#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ú–æ–¥—É–ª—å –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
"""

import logging
from datetime import datetime
import pytz
from sqlalchemy import select

from database import async_session_maker, User, UserAction
from texts import TEXTS, get_text

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞
from constants import TZ

logger = logging.getLogger(__name__)

async def log_user_action(user_id: int, action_type: str, action_data: str = None, message_text: str = None, 
                         reminder_day: int = None, reminder_type: str = None, reminder_date: datetime = None, 
                         is_final_reminder: bool = False, bot_deleted: bool = False):
    """–õ–æ–≥–∏—Ä—É–µ—Ç –¥–µ–π—Å—Ç–≤–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ"""
    async with async_session_maker() as session:
        try:
            # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            result = await session.execute(
                select(User).where(User.tg_id == user_id)
            )
            user = result.scalar_one_or_none()
            
            if user:
                # –í—Å–µ–≥–¥–∞ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
                russian_action_type = get_text("ru", f"action_{action_type}")
                
                # –ü–µ—Ä–µ–≤–æ–¥–∏–º –¥–∞–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –Ω–∞ —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫
                russian_action_data = None
                if action_data:
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–µ—Ä–µ–≤–æ–¥ –¥–ª—è –¥–∞–Ω–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏—è
                    action_data_key = f"action_data_{action_data}"
                    if action_data_key in TEXTS.get("ru", {}):
                        russian_action_data = get_text("ru", action_data_key)
                    else:
                        russian_action_data = action_data
                
                # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –æ –¥–µ–π—Å—Ç–≤–∏–∏ (–≤—Ä–µ–º—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö)
                action = UserAction(
                    user_id=user.id,
                    action_type=russian_action_type,
                    action_data=russian_action_data,
                    message_text=message_text,
                    reminder_day=reminder_day,
                    reminder_type=reminder_type,
                    reminder_date=datetime.now(TZ) if reminder_date is None else reminder_date.replace(tzinfo=TZ),
                    is_final_reminder=is_final_reminder,
                    bot_deleted=bot_deleted
                )
                session.add(action)
                await session.commit()
                
                logger.info(f"üìù –î–µ–π—Å—Ç–≤–∏–µ –∑–∞–ø–∏—Å–∞–Ω–æ: User {user_id} | {russian_action_type} | {russian_action_data}")
            else:
                logger.warning(f"‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è {action_type}")
                
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–∏ –¥–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")
